Day 3: API Integration (Furniture)
________________________________________
1. Introduction
This document outlines the process of integrating external data from a REST API into the Sanity CMS for "Hekto," a furniture e-commerce platform. The integration aims to automate content management for furniture categories like sofas, chairs, and office desks, ensuring seamless backend synchronization with the Next.js frontend.
Key Objectives:
•	Fetch furniture-related product and category data from an external API.
•	Structure and migrate this data to Sanity CMS.
•	Dynamically display the migrated data on the frontend.
________________________________________
2. API Integration Overview
•	API Name: External Marketplace API
URL: https://next-ecommerce-template-4.vercel.app/api/product
•	Data Fetched:
o	Products: Includes titles, prices, descriptions, categories (e.g., sofas, chairs), images, etc.
o	Categories: Furniture categories such as "Sofas," "Chairs," etc., linked to products.
•	Sanity Client Usage: The Sanity Client was employed to manage and store fetched data in compliance with the defined schema structure.
________________________________________
3. Schema Structure Updates
To accommodate furniture-specific data, the product schema was enhanced. Key updates include:
Updated Fields:
•	name (string): The product’s name (required).
•	image (image): Visual representation of the furniture.
•	price (string): The product’s price (required).
•	description (text): A concise product description (max 150 characters).
•	discountPercentage (number): Applicable discount percentage (0 to 100).
•	isFeaturedProduct (boolean): Indicates if the product is featured.
•	stockLevel (number): Tracks product availability (must be positive).
•	category (reference): Links the product to its category.
________________________________________
4. Migration Steps and Tools Used
Tools Utilized:
1.	Sanity Client: Interacted with Sanity CMS using @sanity/client.
2.	Node.js & Fetch API: Fetched data from the external API and uploaded it to Sanity.
3.	Environment Variables: Safely stored sensitive data (e.g., API tokens) using .env files.
4.	Sanity Image Tool: Uploaded and managed furniture images within the CMS.
Migration Steps:
1.	Environment Setup:
o	Installed dependencies: @sanity/client, dotenv.
o	Configured .env.local for API keys and tokens.
2.	Sanity Client Configuration:
o	Created a sanityClient instance with project ID, dataset, and API token.
3.	Data Fetching:
o	Retrieved furniture product and category data using fetch from the API.
4.	Image Upload:
o	Uploaded images via Sanity’s asset pipeline and linked them using asset IDs.
________________________________________
5. Implementation Results
Frontend Display:
•	Migrated data dynamically rendered on the frontend.
•	Featured sections include: 
o	Latest Products
o	Featured Products
________________________________________
6. Code Snippets and Scripts
API Integration Snippet:
import sanityClient from '@sanity/client';
import fetch from 'node-fetch';
import dotenv from 'dotenv';

dotenv.config();

const client = sanityClient({
  projectId: process.env.SANITY_PROJECT_ID,
  dataset: process.env.SANITY_DATASET,
  token: process.env.SANITY_API_TOKEN,
  useCdn: false,
});

const fetchData = async () => {
  try {
    const response = await fetch('https://next-ecommerce-template-4.vercel.app/api/product');
    const data = await response.json();

    data.products.forEach(async (product) => {
      await client.create({
        _type: 'product',
        name: product.title,
        image: product.image,
        price: product.price,
        description: product.description,
        discountPercentage: product.discount,
        isFeaturedProduct: product.featured,
        stockLevel: product.stock,
        category: {
          _type: 'reference',
          _ref: product.categoryId,
        },
      });
    });
  } catch (error) {
    console.error('Error fetching or uploading data:', error);
  }
};

fetchData();
________________________________________
Prepared by Waqar Ahmed


